class t{constructor(t){if(0==t.length||t.length>2)throw"invalid note name length "+t.length+" for note "+t;var e=new RegExp(/[a-gA-GX]/);if(this.letter=t[0],!e.test(this.letter))throw'note letter must be between "a" and "g", got '+this.letter;if(2==t.length&&"#"!=t[1])throw"only sharps are valid accidentals, got "+t[1]+" from "+t;this.accidental=2==t.length}string(){var t=this.letter;return this.accidental&&(t+="#"),t}prettyString(){var t=this.letter;if(this.accidental)switch(t){case"d":return"Eb";case"a":return"Bb";default:t+="#"}return t.toLocaleUpperCase()}enharmonicEquivalent(){return this.accidental?o[(o.indexOf(this)+1)%12].letter.toLocaleUpperCase()+"b":this.string().toUpperCase()}next(){var t=o.indexOf(this);return o[(t+1)%12]}nextLowest(){var t=o.indexOf(this);return o[(t-1+12)%12]}equals(t){return this.letter==t.letter&&this.accidental==t.accidental}color(){return this.accidental?"black":"white"}}function e(t){let e=t.toLocaleLowerCase();if(h.has(e))return o[h.get(e)];if(g.has(e))return o[g.get(e)];throw new Error("note "+t+" is not a valid note")}function r(){return c.map(t=>e(t))}function n(t){return t.discriminator&&"I'm a real Note!"===t.discriminator()}class s{constructor(t,e){this.abstract=t,this.octave=e}discriminator(){return"I'm a real Note!"}getOctave(){return this.octave}getAbstract(){return this.abstract}lowerThan(t){if(this.getOctave()<t.getOctave())return!0;if(this.getOctave()>t.getOctave())return!1;if(-1==o.indexOf(this.getAbstract()))throw"can't find this abstract note "+this.getAbstract().string();if(-1==o.indexOf(t.getAbstract()))throw"can't find that abstract note "+t.getAbstract().string();return o.indexOf(this.getAbstract())<o.indexOf(t.getAbstract())}next(){var t=this.getOctave();return 11==o.indexOf(this.getAbstract())&&t++,i(this.getAbstract().next().string(),t)}nextLowest(){var t=this.getOctave();return 0==o.indexOf(this.getAbstract())&&t--,i(this.getAbstract().nextLowest().string(),t)}string(){return this.getAbstract().string()+this.getOctave()}enharmonicEquivalent(){return this.getAbstract().enharmonicEquivalent()+this.getOctave()}equals(t){return this.getOctave()==t.getOctave()&&this.getAbstract().equals(t.getAbstract())}deepCopy(){return i(this.getAbstract().string(),this.getOctave())}color(){return this.getAbstract().color()}intervalTo(t){return 12*(t.getOctave()-this.getOctave())+(c.indexOf(t.getAbstract().string())-c.indexOf(this.getAbstract().string()))}jump(t){let e=Math.trunc(t/12),r=t%12,n=c.indexOf(this.getAbstract().string())+r;return n<0&&(e--,n+=12),n>11&&(e++,n-=12),i(o[n].string(),this.getOctave()+e)}midiNumber(){return 12*(this.getOctave()+1)+c.indexOf(this.getAbstract().string())}}const a=new Map;function i(t,r){const n=t.toLocaleLowerCase()+r;return a.has(n)||a.set(n,new s(e(t),r)),a.get(n)}const c=["c","c#","d","d#","e","f","f#","g","g#","a","a#","b"],o=c.map(e=>new t(e)),h=new Map(c.map((t,e)=>[t,e])),g=new Map(c.map((t,e)=>[o[c.indexOf(t)].enharmonicEquivalent().toLocaleLowerCase(),e]));function l(t,e){if(e.lowerThan(t))throw new Error("Highest note lower than lowest note");let r=[],n=t;for(;!n.equals(e);)r.push(n),n=n.next();return r.push(n),r}class u{constructor(t){this.notes=t}lowest(){return this.notes[0]}highest(){return this.notes[this.notes.length-1]}black(){return this.notes.filter(t=>"black"==t.color())}white(){return this.notes.filter(t=>"white"==t.color())}activeMap(){let t=new Map;return function(t,e){let r=[];for(;t.lowerThan(e);)r.push(t),t=t.next();return r.push(t),r}(f,d).forEach(e=>{t.set(e,!1)}),t}}const f=i("A",0),d=i("C",8);export{n as I,u as L,e as N,r as a,i as b,d as h,f as l,l as n};
