.holder.svelte-17fd0lp.svelte-17fd0lp{display:flex;height:100%}.holder.svelte-17fd0lp div.svelte-17fd0lp{flex-grow:1}.holder.svelte-17fd0lp .white.svelte-17fd0lp{background:linear-gradient(180deg, #FFFFFF 0%, #E6E6E6 55.73%, #FFFFFF 100%)}.holder.svelte-17fd0lp .black.svelte-17fd0lp{background:linear-gradient(180deg, rgba(255, 255, 255, 0.36) 0%, #BCBCBC 39.06%, #A4A4A4 100%)}.holder.svelte-17fd0lp .sepholder.svelte-17fd0lp{display:flex}.holder.svelte-17fd0lp .sepholder div.svelte-17fd0lp{height:100%}.holder.svelte-17fd0lp .sepholder .white.svelte-17fd0lp{width:97%}.holder.svelte-17fd0lp .sepholder .separator.svelte-17fd0lp{background:white;width:3%}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUm9sbEJhY2tncm91bmQuc3ZlbHRlIiwic291cmNlcyI6WyJSb2xsQmFja2dyb3VuZC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCBsYW5nPVwidHNcIj47XG5leHBvcnQgbGV0IGtleXM7XG48L3NjcmlwdD5cblxuPHN0eWxlIGxhbmc9XCJzY3NzXCI+LmhvbGRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogMTAwJTsgfVxuICAuaG9sZGVyIGRpdiB7XG4gICAgZmxleC1ncm93OiAxOyB9XG4gIC5ob2xkZXIgLndoaXRlIHtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjRkZGRkZGIDAlLCAjRTZFNkU2IDU1LjczJSwgI0ZGRkZGRiAxMDAlKTsgfVxuICAuaG9sZGVyIC5ibGFjayB7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjM2KSAwJSwgI0JDQkNCQyAzOS4wNiUsICNBNEE0QTQgMTAwJSk7IH1cbiAgLmhvbGRlciAuc2VwaG9sZGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG4gICAgLmhvbGRlciAuc2VwaG9sZGVyIGRpdiB7XG4gICAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgICAuaG9sZGVyIC5zZXBob2xkZXIgLndoaXRlIHtcbiAgICAgIHdpZHRoOiA5NyU7IH1cbiAgICAuaG9sZGVyIC5zZXBob2xkZXIgLnNlcGFyYXRvciB7XG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgIHdpZHRoOiAzJTsgfVxuPC9zdHlsZT5cblxuPGRpdiBjbGFzcz1cImhvbGRlclwiPlxuICAgIHsjZWFjaCBrZXlzIGFzIGtleSwgaX1cbiAgICAgICAgeyNpZiBrZXkuZ2V0QWJzdHJhY3QoKS5hY2NpZGVudGFsfVxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImJsYWNrXCI+PC9kaXY+XG4gICAgICAgIHs6ZWxzZSBpZiBpID4gMCAmJiAha2V5c1tpLTFdLmdldEFic3RyYWN0KCkuYWNjaWRlbnRhbH1cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzZXBob2xkZXJcIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwic2VwYXJhdG9yXCI+PC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndoaXRlXCI+PC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgezplbHNlfVxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cIndoaXRlXCI+PC9kaXY+XG4gICAgICAgIHsvaWZ9XG4gICAgey9lYWNofVxuPC9kaXY+Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUltQixPQUFPLDhCQUFDLENBQUMsQUFDMUIsT0FBTyxDQUFFLElBQUksQ0FDYixNQUFNLENBQUUsSUFBSSxBQUFFLENBQUMsQUFDZixzQkFBTyxDQUFDLEdBQUcsZUFBQyxDQUFDLEFBQ1gsU0FBUyxDQUFFLENBQUMsQUFBRSxDQUFDLEFBQ2pCLHNCQUFPLENBQUMsTUFBTSxlQUFDLENBQUMsQUFDZCxVQUFVLENBQUUsZ0JBQWdCLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxBQUFFLENBQUMsQUFDbEYsc0JBQU8sQ0FBQyxNQUFNLGVBQUMsQ0FBQyxBQUNkLFVBQVUsQ0FBRSxnQkFBZ0IsTUFBTSxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxBQUFFLENBQUMsQUFDcEcsc0JBQU8sQ0FBQyxVQUFVLGVBQUMsQ0FBQyxBQUNsQixPQUFPLENBQUUsSUFBSSxBQUFFLENBQUMsQUFDaEIsc0JBQU8sQ0FBQyxVQUFVLENBQUMsR0FBRyxlQUFDLENBQUMsQUFDdEIsTUFBTSxDQUFFLElBQUksQUFBRSxDQUFDLEFBQ2pCLHNCQUFPLENBQUMsVUFBVSxDQUFDLE1BQU0sZUFBQyxDQUFDLEFBQ3pCLEtBQUssQ0FBRSxHQUFHLEFBQUUsQ0FBQyxBQUNmLHNCQUFPLENBQUMsVUFBVSxDQUFDLFVBQVUsZUFBQyxDQUFDLEFBQzdCLFVBQVUsQ0FBRSxLQUFLLENBQ2pCLEtBQUssQ0FBRSxFQUFFLEFBQUUsQ0FBQyJ9 */
.grandaddy.svelte-1ew6a7t.svelte-1ew6a7t{position:relative;width:100%;height:100%;overflow:hidden}.fader.svelte-1ew6a7t.svelte-1ew6a7t{position:absolute;height:30%;top:0;width:100%;background:linear-gradient(180deg, #fff 0%, rgba(255, 255, 255, 0) 100%);z-index:1}.noteholder.svelte-1ew6a7t.svelte-1ew6a7t{position:absolute;display:flex;height:100%;width:100%;top:var(--top)}.noteholder.svelte-1ew6a7t div.svelte-1ew6a7t{flex-grow:1}.keyholder.svelte-1ew6a7t.svelte-1ew6a7t{position:relative;transform:rotate(180deg)}.note.svelte-1ew6a7t.svelte-1ew6a7t{width:100%;height:calc(var(--height));top:calc(var(--top));position:absolute;background-color:var(--color);opacity:1;z-index:1;border-radius:10px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRE9NUm9sbC5zdmVsdGUiLCJzb3VyY2VzIjpbIkRPTVJvbGwuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQgbGFuZz1cInRzXCI+aW1wb3J0IHsgb25Nb3VudCB9IGZyb20gXCJzdmVsdGVcIjtcbjtcbjtcbjtcbmltcG9ydCBSb2xsQmFja2dyb3VuZCBmcm9tIFwiLi9Sb2xsQmFja2dyb3VuZC5zdmVsdGVcIjtcbmV4cG9ydCBsZXQgZGVidWdTbGlkZXJzID0gZmFsc2U7XG5leHBvcnQgbGV0IHBvc2l0aW9uID0gMDtcbmV4cG9ydCBsZXQgem9vbVdpZHRoID0gMTtcbmV4cG9ydCBsZXQga2V5cztcbmV4cG9ydCBsZXQgZHVyYXRpb24gPSA1MDAwO1xuZXhwb3J0IGxldCBjb2xvdXJlcjtcbmV4cG9ydCBsZXQgdHJhY2tzO1xuZXhwb3J0IGxldCBoZWlnaHRFbGVtZW50O1xuLy8gc2hvdyA1IHNlY29uZHNcbiQ6IHpvb21XaWR0aCA9IDUwMDAgLyBkdXJhdGlvbjtcbi8vIFRPRE86IEZVQ0tJTkcgR0VUIFJJRCBPRiBUSElTIFBJRUNFIE9GIFNISVQgUElMRSBPRiBUUkFTSFxuLy8gYnMgaGFja2VyeSB0byBnZXQgdGhlIGhlaWdodCB3b3JraW5nIG9uIGlQaG9uZSwgdGhlIGhlaWdodCBvZiBncmFuZGFkZHksIGRlc3BpdGUgYmVpbmcgMTAwJSwgaXMgMHB4LCB3aGlsZSB0aGUgcGFyZW50IChhbHNvIHJlbGF0aXZlbHkgcG9zaXRpb25lZCkgaGFzIGEgbm9uIHplcm8gcGl4ZWwgaGVpZ2h0XG5sZXQgZ2Q7XG5sZXQgbW91bnRlZDtcbm9uTW91bnQoKCkgPT4ge1xuICAgIG1vdW50ZWQgPSB0cnVlO1xufSk7XG5sZXQgaGFja2VkID0gZmFsc2U7XG4kOiB7XG4gICAgaWYgKCFoYWNrZWQgJiYgaGVpZ2h0RWxlbWVudCAmJiBnZCAmJiBoZWlnaHRFbGVtZW50LmNsaWVudEhlaWdodCkge1xuICAgICAgICBpZiAoaGVpZ2h0RWxlbWVudC5jbGllbnRIZWlnaHQgIT0gZ2QuY2xpZW50SGVpZ2h0KSB7XG4gICAgICAgICAgICBnZC5zdHlsZS5oZWlnaHQgPSBoZWlnaHRFbGVtZW50LmNsaWVudEhlaWdodCArIFwicHhcIjtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8vIFRPRE86IHVzZSBhIGxvZ2ljYWxseSBpZGVudGljYWwgZnVuY3Rpb24gdG8gdGhpcyB0byBoaWRlIG5vdGVzIHRoYXQgYXJlIG9mZiB0aGUgc2NyZWVuLiBCdXQgaW1wbGVtZW50IGl0IGFzIGEgc3RvcmUgdGhhdCBmaXJlcyBvZmYgc2hvdy9oaWRlIG5vdGUgZXZlbnRzIGJhc2VkIG9uIHBvc2l0aW9uXG4vLyB0byB1cGRhdGUgYSBtYXAgb2Ygd2hpY2ggbm90ZXMgc2hvdWxkIGJlIHNob3duLiBUaGlzIG1lYW5zIHdlIG9ubHkgaGF2ZSBvbmUgc21hbGwgZnVuY3Rpb24gZmlyaW5nIGZvciBldmVyeSBwb3NpdGlvbiB1cGRhdGUsIHdoaWNoIHJlYWRzIG9mZiBhIHF1ZXVlIHdoaWNoIGlzIGEgc2ltcGxlIGNvbXB1dGF0aW9uLFxuLy8gYW5kIHRoZSBvbmx5IG90aGVyIGNvbXB1dGF0aW9uIGlzIHdoZW4gYSBub3RlIGlzIHNob3duIG9yIGhpZGRlbi4gVGhlIGN1cnJlbnQgaW1wbGVtZW50YXRpb24gY2hlY2tzIGlmIGV2ZXJ5IG5vdGUgaXMgaW4gYm91bmRzIGV2ZXJ5IHRpbWUgdGhlIHBvc2l0aW9uIGNoYW5nZXMuXG4vLyBUT0RPOiBjaGFuZ2UgYmFjayB0byBQSVhJIG9uY2UgdGhlIGdhbWVwbGF5IGlzIHNvbWV3aGF0IHZlcmlmaWVkLlxuZnVuY3Rpb24gd2l0aGluQm91bmRzKG5vdGUsIHBvc2l0aW9uLCB6b29tV2lkdGgpIHtcbiAgICByZXR1cm4gKG5vdGUuc3RhcnQgPiBwb3NpdGlvbiAmJiBub3RlLnN0YXJ0IDwgcG9zaXRpb24gKyB6b29tV2lkdGgpIHx8IChub3RlLmVuZCA+IHBvc2l0aW9uICYmIG5vdGUuZW5kIDwgcG9zaXRpb24gKyB6b29tV2lkdGgpO1xufVxuPC9zY3JpcHQ+XG5cbjxzdHlsZSBsYW5nPVwic2Nzc1wiPi5ncmFuZGFkZHkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLmZhZGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDMwJTtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgI2ZmZiAwJSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSAxMDAlKTtcbiAgei1pbmRleDogMTsgfVxuXG4ubm90ZWhvbGRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgdG9wOiB2YXIoLS10b3ApOyB9XG4gIC5ub3RlaG9sZGVyIGRpdiB7XG4gICAgZmxleC1ncm93OiAxOyB9XG5cbi5rZXlob2xkZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7IH1cblxuLm5vdGUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiBjYWxjKHZhcigtLWhlaWdodCkpO1xuICB0b3A6IGNhbGModmFyKC0tdG9wKSk7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3IpO1xuICBvcGFjaXR5OiAxO1xuICB6LWluZGV4OiAxO1xuICBib3JkZXItcmFkaXVzOiAxMHB4OyB9XG48L3N0eWxlPlxuXG48ZGl2IGNsYXNzPVwiZ3JhbmRhZGR5XCIgYmluZDp0aGlzPXtnZH0+XG4gICAgPFJvbGxCYWNrZ3JvdW5kIHtrZXlzfT48L1JvbGxCYWNrZ3JvdW5kPlxuICAgIDxkaXYgY2xhc3M9XCJmYWRlclwiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJub3RlaG9sZGVyXCIgc3R5bGU9XCItLXRvcDoge3Bvc2l0aW9uKjEwMC96b29tV2lkdGh9JVwiPlxuICAgICAgICB7I2VhY2gga2V5cyBhcyBrZXl9XG4gICAgICAgIDwhLS0gVE9ETzogd2h5IGRvZXMgdGhlIGtleWhvbGRlciBpbmhlcml0IHRoZSAtLXRvcCB2YXJpYWJsZSBmcm9tIHRoZSBub3RlaG9sZGVyPyBEb2VzIHRoaXMgbWFzc2l2ZSBpbmNyZWFzZSB0aGUgcmVxdWlyZWQgcmVuZGVyaW5nIHRpbWU/IC0tPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImtleWhvbGRlclwiPlxuICAgICAgICAgICAgICAgIHsjZWFjaCBBcnJheS5mcm9tKHRyYWNrcy52YWx1ZXMoKSkgYXMgdHJhY2ssIHRyYWNrTnVtfVxuICAgICAgICAgICAgICAgICAgICB7I2VhY2ggdHJhY2subm90ZXMgYXMgbm90ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHsjaWYgbm90ZS5ub3RlLmVxdWFscyhrZXkpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJub3RlXCIgc3R5bGU9XCItLXRvcDoge25vdGUuc3RhcnQgKiAxMDAgLyB6b29tV2lkdGh9JTsgLS1oZWlnaHQ6IHsobm90ZS5lbmQgLSBub3RlLnN0YXJ0KSoxMDAgLyB6b29tV2lkdGh9JTsgLS1jb2xvcjoge2NvbG91cmVyLmhleCh0cmFja051bSl9XCI+PC9kaXY+IFxuICAgICAgICAgICAgICAgICAgICAgICAgey9pZn1cbiAgICAgICAgICAgICAgICAgICAgey9lYWNofVxuICAgICAgICAgICAgICAgIHsvZWFjaH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICB7L2VhY2h9XG4gICAgPC9kaXY+XG48L2Rpdj5cblxueyNpZiBkZWJ1Z1NsaWRlcnN9XG4gICAgPGlucHV0IHR5cGU9XCJyYW5nZVwiIGJpbmQ6dmFsdWU9e3Bvc2l0aW9ufSBtaW49XCIwXCIgbWF4PVwiMVwiIHN0ZXA9XCIwLjAwMDFcIj5cbiAgICBwb3NpdGlvbiB7cG9zaXRpb259XG4gICAgPGJyPlxuICAgIDxpbnB1dCB0eXBlPVwicmFuZ2VcIiBiaW5kOnZhbHVlPXt6b29tV2lkdGh9IG1pbj1cIjBcIiBtYXg9XCIxXCIgc3RlcD1cIjAuMDAwMVwiPlxuICAgIHpvb20ge3pvb21XaWR0aH1cbnsvaWZ9Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVDbUIsVUFBVSw4QkFBQyxDQUFDLEFBQzdCLFFBQVEsQ0FBRSxRQUFRLENBQ2xCLEtBQUssQ0FBRSxJQUFJLENBQ1gsTUFBTSxDQUFFLElBQUksQ0FDWixRQUFRLENBQUUsTUFBTSxBQUFFLENBQUMsQUFFckIsTUFBTSw4QkFBQyxDQUFDLEFBQ04sUUFBUSxDQUFFLFFBQVEsQ0FDbEIsTUFBTSxDQUFFLEdBQUcsQ0FDWCxHQUFHLENBQUUsQ0FBQyxDQUNOLEtBQUssQ0FBRSxJQUFJLENBQ1gsVUFBVSxDQUFFLGdCQUFnQixNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FDekUsT0FBTyxDQUFFLENBQUMsQUFBRSxDQUFDLEFBRWYsV0FBVyw4QkFBQyxDQUFDLEFBQ1gsUUFBUSxDQUFFLFFBQVEsQ0FDbEIsT0FBTyxDQUFFLElBQUksQ0FDYixNQUFNLENBQUUsSUFBSSxDQUNaLEtBQUssQ0FBRSxJQUFJLENBQ1gsR0FBRyxDQUFFLElBQUksS0FBSyxDQUFDLEFBQUUsQ0FBQyxBQUNsQiwwQkFBVyxDQUFDLEdBQUcsZUFBQyxDQUFDLEFBQ2YsU0FBUyxDQUFFLENBQUMsQUFBRSxDQUFDLEFBRW5CLFVBQVUsOEJBQUMsQ0FBQyxBQUNWLFFBQVEsQ0FBRSxRQUFRLENBQ2xCLFNBQVMsQ0FBRSxPQUFPLE1BQU0sQ0FBQyxBQUFFLENBQUMsQUFFOUIsS0FBSyw4QkFBQyxDQUFDLEFBQ0wsS0FBSyxDQUFFLElBQUksQ0FDWCxNQUFNLENBQUUsS0FBSyxJQUFJLFFBQVEsQ0FBQyxDQUFDLENBQzNCLEdBQUcsQ0FBRSxLQUFLLElBQUksS0FBSyxDQUFDLENBQUMsQ0FDckIsUUFBUSxDQUFFLFFBQVEsQ0FDbEIsZ0JBQWdCLENBQUUsSUFBSSxPQUFPLENBQUMsQ0FDOUIsT0FBTyxDQUFFLENBQUMsQ0FDVixPQUFPLENBQUUsQ0FBQyxDQUNWLGFBQWEsQ0FBRSxJQUFJLEFBQUUsQ0FBQyJ9 */
div.svelte-1rzjcd5.svelte-1rzjcd5{border:1px solid #5A5757;display:flex;background:linear-gradient(90deg, var(--color) var(--width), #FFFFFF var(--width))}div.svelte-1rzjcd5 p.svelte-1rzjcd5{align-self:center}div.svelte-1rzjcd5 p.svelte-1rzjcd5{align-self:center;margin:auto}.small.svelte-1rzjcd5.svelte-1rzjcd5{height:7px;width:84px}.medium.svelte-1rzjcd5.svelte-1rzjcd5{height:18px;width:105px}.large.svelte-1rzjcd5.svelte-1rzjcd5{height:19px;width:150px}.flex.svelte-1rzjcd5.svelte-1rzjcd5{height:100%;width:100%}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2NvcmVCYXIuc3ZlbHRlIiwic291cmNlcyI6WyJTY29yZUJhci5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCBsYW5nPVwidHNcIj5leHBvcnQgbGV0IHNpemUgPSBcInNtYWxsXCI7XG5leHBvcnQgbGV0IHZhbHVlID0gMDtcbmV4cG9ydCBsZXQgc2hvd1ZhbHVlID0gZmFsc2U7XG5leHBvcnQgbGV0IGRlbm9taW5hdG9yID0gMTAwO1xuaWYgKHNpemUgIT09IFwic21hbGxcIiAmJiBzaXplICE9PSBcIm1lZGl1bVwiICYmIHNpemUgIT09IFwibGFyZ2VcIiAmJiBzaXplICE9PSBcImZsZXhcIilcbiAgICBzaXplID0gXCJzbWFsbFwiO1xuaWYgKHNpemUgPT09IFwic21hbGxcIilcbiAgICBzaG93VmFsdWUgPSBmYWxzZTtcbjwvc2NyaXB0PlxuXG48c3R5bGUgbGFuZz1cInNjc3NcIj5kaXYge1xuICBib3JkZXI6IDFweCBzb2xpZCAjNUE1NzU3O1xuICBkaXNwbGF5OiBmbGV4O1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHZhcigtLWNvbG9yKSB2YXIoLS13aWR0aCksICNGRkZGRkYgdmFyKC0td2lkdGgpKTsgfVxuICBkaXYgcCB7XG4gICAgYWxpZ24tc2VsZjogY2VudGVyOyB9XG4gIGRpdiBwIHtcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgbWFyZ2luOiBhdXRvOyB9XG5cbi5zbWFsbCB7XG4gIGhlaWdodDogN3B4O1xuICB3aWR0aDogODRweDsgfVxuXG4ubWVkaXVtIHtcbiAgaGVpZ2h0OiAxOHB4O1xuICB3aWR0aDogMTA1cHg7IH1cblxuLmxhcmdlIHtcbiAgaGVpZ2h0OiAxOXB4O1xuICB3aWR0aDogMTUwcHg7IH1cblxuLmZsZXgge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlOyB9XG48L3N0eWxlPlxuXG48ZGl2IGNsYXNzPXtzaXplfSBzdHlsZT1cIi0td2lkdGg6IHsxMDAqdmFsdWUvZGVub21pbmF0b3J9JTsgLS1jb2xvcjoge3ZhbHVlID49IGRlbm9taW5hdG9yID8gXCIjMUNCRTAyXCIgOiBcIiNGRkE4MDBcIn1cIj5cbiAgICB7I2lmIHNob3dWYWx1ZX1cbiAgICAgICAgPHAgY2xhc3M9XCJyb2JvdGljXCI+e3ZhbHVlfS97ZGVub21pbmF0b3J9PC9wPlxuICAgIHsvaWZ9XG48L2Rpdj5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFVbUIsR0FBRyw4QkFBQyxDQUFDLEFBQ3RCLE1BQU0sQ0FBRSxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FDekIsT0FBTyxDQUFFLElBQUksQ0FDYixVQUFVLENBQUUsZ0JBQWdCLEtBQUssQ0FBQyxDQUFDLElBQUksT0FBTyxDQUFDLENBQUMsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLE9BQU8sQ0FBQyxDQUFDLEFBQUUsQ0FBQyxBQUN0RixrQkFBRyxDQUFDLENBQUMsZUFBQyxDQUFDLEFBQ0wsVUFBVSxDQUFFLE1BQU0sQUFBRSxDQUFDLEFBQ3ZCLGtCQUFHLENBQUMsQ0FBQyxlQUFDLENBQUMsQUFDTCxVQUFVLENBQUUsTUFBTSxDQUNsQixNQUFNLENBQUUsSUFBSSxBQUFFLENBQUMsQUFFbkIsTUFBTSw4QkFBQyxDQUFDLEFBQ04sTUFBTSxDQUFFLEdBQUcsQ0FDWCxLQUFLLENBQUUsSUFBSSxBQUFFLENBQUMsQUFFaEIsT0FBTyw4QkFBQyxDQUFDLEFBQ1AsTUFBTSxDQUFFLElBQUksQ0FDWixLQUFLLENBQUUsS0FBSyxBQUFFLENBQUMsQUFFakIsTUFBTSw4QkFBQyxDQUFDLEFBQ04sTUFBTSxDQUFFLElBQUksQ0FDWixLQUFLLENBQUUsS0FBSyxBQUFFLENBQUMsQUFFakIsS0FBSyw4QkFBQyxDQUFDLEFBQ0wsTUFBTSxDQUFFLElBQUksQ0FDWixLQUFLLENBQUUsSUFBSSxBQUFFLENBQUMifQ== */
.score.svelte-r4lmbp.svelte-r4lmbp{position:absolute;width:calc(100% - 10px);height:10%;display:flex;justify-content:flex-end;align-items:center}.content.svelte-r4lmbp.svelte-r4lmbp{height:10%;display:flex;flex-direction:column;justify-content:center;align-items:center;z-index:2}.content.svelte-r4lmbp p.svelte-r4lmbp{margin:0;color:grey}.content.svelte-r4lmbp h3.svelte-r4lmbp{margin:0}.content.svelte-r4lmbp div.svelte-r4lmbp{display:flex;flex-direction:column;justify-content:center;align-items:center}.content.svelte-r4lmbp .end.svelte-r4lmbp{position:absolute;top:50px}.content.svelte-r4lmbp .end div.svelte-r4lmbp{flex-direction:row;z-index:3;margin:6px}.roll.svelte-r4lmbp.svelte-r4lmbp{height:calc(60% - 50px);width:100%}.piano.svelte-r4lmbp.svelte-r4lmbp{height:30%;position:relative}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
